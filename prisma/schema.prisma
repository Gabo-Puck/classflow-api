// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id               Int               @id @default(autoincrement())
  email            String            @unique
  profilePic       String?
  name             String
  lastname         String
  role             String
  password         String
  emailVerified    Boolean           @default(false)
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  TermTemplate     TermTemplate[]
  classEnrollments ClassEnrollment[]
  classesCreated   Class[]
}

model Class {
  id               Int               @id @default(autoincrement())
  name             String
  description      String
  deleted          Boolean           @default(false)
  archived         Boolean           @default(false)
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  creatorId        Int
  deletedAt        DateTime?
  archivedAt       DateTime?
  terms            Term[]
  professor        User              @relation(fields: [creatorId], references: [id])
  enrolledStudents ClassEnrollment[]
}

model ClassEnrollment {
  class      Class    @relation(fields: [classId], references: [id])
  classId    Int
  student    User     @relation(fields: [studentId], references: [id])
  studentId  Int
  enrolledAt DateTime @default(now())

  @@id([studentId, classId])
}

model Term {
  id             Int              @id @default(autoincrement())
  name           String
  value          Int
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  termCategories TermCategories[]
  Class          Class?           @relation(fields: [classId], references: [id])
  classId        Int?
}

model TermCategories {
  id          Int      @id @default(autoincrement())
  name        String
  value       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  termId      Int
  termDetails Term     @relation(fields: [termId], references: [id], onDelete: Cascade)
}

model TermTemplate {
  id          Int                   @id @default(autoincrement())
  name        String
  createdAt   DateTime              @default(now())
  updatedAt   DateTime              @updatedAt
  creatorId   Int
  creator     User                  @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  termDetails TermTemplateDetails[]
}

model TermTemplateDetails {
  id                            Int                             @id @default(autoincrement())
  name                          String
  value                         Int
  createdAt                     DateTime                        @default(now())
  updatedAt                     DateTime                        @updatedAt
  termTemplate                  TermTemplate                    @relation(fields: [termTemplateId], references: [id], onDelete: Cascade)
  termTemplateId                Int
  termTemplateDetailsCategories TermTemplateDetailsCategories[]
}

model TermTemplateDetailsCategories {
  id                    Int                 @id @default(autoincrement())
  name                  String
  value                 Int
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  termTemplateDetailsId Int
  termTemplateDetails   TermTemplateDetails @relation(fields: [termTemplateDetailsId], references: [id], onDelete: Cascade)
}
